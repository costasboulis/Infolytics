<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
					http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
					http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					http://www.springframework.org/schema/context
					http://www.springframework.org/schema/context/spring-context-3.0.xsd
					http://www.springframework.org/schema/aop
					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
					http://www.springframework.org/schema/tx
					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	
	<tx:annotation-driven />
	<context:annotation-config />
	
	<!-- Beans -->
	<bean id="recommendationsDAO" class="gr.infolytics.recommendations.dao.RecommendationsDAOImpl" />
	<bean id="catalogDAO" class="com.cleargist.catalog.dao.CatalogDAOImpl" />
	<bean class="gr.infolytics.recommendations.entity.Activity" />
	<bean class="gr.infolytics.recommendations.entity.ErrorLog" />
	<bean class="gr.infolytics.recommendations.entity.Tenant" />
	<bean class="gr.infolytics.recommendations.entity.User" />
	<bean class="gr.infolytics.recommendations.entity.UserRole" />
	<bean class="gr.infolytics.recommendations.entity.Catalog" />
	<bean class="gr.infolytics.recommendations.entity.Widget" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" /> <!-- Prints used SQL to stdout -->
				<property name="generateDdl" value="true" /> <!-- Generates tables. -->
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
			</bean>
		</property>
	</bean>
	<bean id="dataSource"
		class="com.mysql.jdbc.jdbc2.optional.MysqlConnectionPoolDataSource">
		<property name="url"
			value="jdbc:mysql://recommenddbinst1.cvkot0h5spdy.us-east-1.rds.amazonaws.com:3306/recommendationsDB?characterEncoding=utf8&amp;useUnicode=true" />
		<property name="user" value="cleargistdbuser" />
		<property name="password" value="cl3arg15t" />
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="mail.cleargist.com" />
		<property name="port" value="25" />
		<property name="username" value="signup@cleargist.com" />
		<property name="password" value="cl3arg15t" />
		<property name="javaMailProperties">
			<props>
				<!-- Use SMTP-AUTH to authenticate to SMTP server -->
				<prop key="mail.smtp.auth">true</prop>
				<!-- Use TLS to encrypt communication with SMTP server -->
				<prop key="mail.smtp.starttls.enable">false</prop>
			</props>
		</property>
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

	<bean id="notificationManager"
		class="gr.infolytics.recommendations.web.NotificationManagerImpl">
		<property name="mailSender" ref="mailSender" />
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />


	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="order" value="1" />
	</bean>

	<bean
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
		<property name="order" value="2" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename">
			<value>messages</value>
		</property>
	</bean>

	<bean class="gr.infolytics.recommendations.util.JsonpCallbackFilter"
		id="jsonpCallbackFilter" />

	<bean id="processCatalogJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="gr.infolytics.recommendations.util.ProcessCatalogJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="timeout" value="12" />
				<entry key="recDao">   
                	<ref bean="recommendationsDAO"/>
                </entry>
                <entry key="catDao">   
                	<ref bean="catalogDAO"/>
                </entry> 
			</map>
		</property>
	</bean>
	<bean id="processCatalogTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		
		<property name="jobDetail" ref="processCatalogJob" />
		<property name="cronExpression" value="0/59 * * * * ?" />

	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		p:waitForJobsToCompleteOnShutdown="true">
		<property name="triggers">
			<list>
				<ref bean="processCatalogTrigger" />
			</list>
		</property>
	</bean>

</beans>